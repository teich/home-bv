### sensors.yaml
# - platform: xiaomi_miio
#   name: Xiaomi Air Quality Monitor
#   host: 192.168.2.158
#   token: !secret token_airmonitor

- platform: wirelesstag
  monitored_conditions:
    - temperature
    - humidity
    - light
    # - moisture

- platform: rest
  name: bv_temp
  resource: https://swd.weatherflow.com/swd/rest/observations/?device_id=83965&api_key=ea83f7ca-1c4f-4319-a6ba-38683662c46e
  scan_interval: 300
  value_template: "{{ ((value_json['summary']['feels_like'])|float * (9 / 5)+ 32)|round(1) }}"
  unit_of_measurement: 'Â°F'

# - platform: rest
#   name: IoTaWattGarage
#   resource: 'http://192.168.2.20/status?inputs=yes&outputs=yes'
#   json_attributes:
#     - outputs
#   value_template: '{{ value_json.inputs[0].Vrms }}'
#   device_class: voltage
#   scan_interval: 5

# - platform: rest
#   name: IoTaWattHouse
#   resource: 'http://192.168.2.21/status?inputs=yes&outputs=yes'
#   json_attributes:
#     - outputs
#   value_template: '{{ value_json.inputs[0].Vrms }}'
#   device_class: voltage
#   scan_interval: 5

- platform: template
  sensors:
    water_tank_level:
      friendly_name: "Water Tank Level"
      unit_of_measurement: '%'
      icon_template: mdi:gas-cylinder
      value_template: >
        {% set voltage = states('sensor.water_tank_voltage')|float %}
        {% if voltage > 0.50 %}
          {{((voltage - 0.59)/(1.42-0.59)*100)|round(0) }}
        {% else %}
          invalid
        {% endif %}
    # # IotaWatt generated sensors
    # iotawatt_output_agtotal:
    #   value_template: '{{ states.sensor.iotawattgarage.attributes.outputs[0].value | round(1) }}'
    #   unit_of_measurement: Watts
    #   device_class: power
    # iotawatt_output_garage_misc:
    #   value_template: '{{ states.sensor.iotawattgarage.attributes.outputs[1].value | round(1) }}'
    #   unit_of_measurement: Watts
    #   device_class: power
    # iotawatt_output_solar:
    #   value_template: '{{ states.sensor.iotawattgarage.attributes.outputs[2].value | round(1) }}'
    #   unit_of_measurement: Watts
    #   device_class: power
    # iotawatt_output_well:
    #   value_template: '{{ states.sensor.iotawattgarage.attributes.outputs[3].value | round(1) }}'
    #   unit_of_measurement: Watts
    #   device_class: power
    # iotawatt_output_housetotal:
    #   value_template: '{{ states.sensor.iotawatthouse.attributes.outputs[0].value | round(1) }}'
    #   unit_of_measurement: Watts
    #   device_class: power
    # iotawatt_output_misc:
    #   value_template: '{{ states.sensor.iotawatthouse.attributes.outputs[1].value | round(1) }}'
    #   unit_of_measurement: Watts
    #   device_class: power
    # iotawatt_total:
    #   value_template: "{{ (states('sensor.iotawatt_output_housetotal')|float + states('sensor.iotawatt_output_agtotal')|float) | round(1) }}"
    #   unit_of_measurement: Watts
    #   device_class: power


